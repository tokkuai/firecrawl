name: firecrawl

x-common-service: &common-service
  build: apps/api
  ulimits:
    nofile: { soft: 65535, hard: 65535 }
  networks: [backend]
  extra_hosts:
    - "host.docker.internal:host-gateway"

x-common-env: &common-env
  # ---- Internal service wiring ----
  REDIS_URL: ${REDIS_URL:-redis://redis:6379}
  REDIS_RATE_LIMIT_URL: ${REDIS_RATE_LIMIT_URL:-redis://redis:6379}
  PLAYWRIGHT_MICROSERVICE_URL: ${PLAYWRIGHT_MICROSERVICE_URL:-http://playwright-service:${PLAYWRIGHT_PORT:-3000}/scrape}

  # ---- Auth (Supabase only if enabled) ----
  USE_DB_AUTHENTICATION: ${USE_DB_AUTHENTICATION}

  # ---- AI (OpenAI) ----
  OPENAI_API_KEY: ${OPENAI_API_KEY}
  OPENAI_BASE_URL: ${OPENAI_BASE_URL}
  MODEL_NAME: ${MODEL_NAME}
  MODEL_EMBEDDING_NAME: ${MODEL_EMBEDDING_NAME}

  # ---- Admin / Logs ----
  BULL_AUTH_KEY: ${BULL_AUTH_KEY}
  LOGGING_LEVEL: ${LOGGING_LEVEL}

services:
  playwright-service:
    build: apps/playwright-service-ts
    environment:
      PORT: ${PLAYWRIGHT_PORT:-3000}
      BLOCK_MEDIA: ${BLOCK_MEDIA}
    networks: [backend]

  api:
    <<: *common-service
    environment:
      <<: *common-env
      HOST: ${HOST:-0.0.0.0}
      PORT: ${INTERNAL_PORT:-3002}
      FLY_PROCESS_GROUP: app
      ENV: local
    depends_on: [redis, playwright-service]
    # No host port mapping; Dokploy's Traefik will reach it via dokploy-network
    command: ["pnpm","run","start:production"]
    networks:
      - backend
      - dokploy-network

  worker:
    <<: *common-service
    environment:
      <<: *common-env
      FLY_PROCESS_GROUP: worker
      ENV: local
    depends_on: [redis, playwright-service, api]
    command: ["pnpm","run","workers"]

  redis:
    image: redis:alpine
    command: ["redis-server","--bind","${REDIS_BIND:-0.0.0.0}","--port","${REDIS_PORT:-6379}"]
    networks: [backend]

  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks: [backend]
    # (Optional) If you want pgAdmin from outside, expose a host port via env:
    # ports:
    #   - "${POSTGRES_HOST_PORT:-5432}:${POSTGRES_CONTAINER_PORT:-5432}"

networks:
  backend:
    driver: bridge
  dokploy-network:
    external: true

volumes:
  postgres_data:
